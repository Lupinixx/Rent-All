@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Rent_All_Certificate.Models.Certification>
@{
    ViewBag.Title = "Inventory";
}

<div class="row">
    <div class="col-md-12">
        @if (Model != null && Model.Count() > 0 && Request.QueryString["product"] != null)
        {
            foreach (var item in Model)
            {
                <h2>@Html.DisplayFor(modelItem => item.Inventory.Product.Manufacturer.ManufacturerName) @Html.DisplayFor(modelItem => item.Inventory.Product.ProductName) - Certificates</h2>
                break;
            }
        }
        else
        {
            <h2>Certificates</h2>
        }

        <hr/>

        <div class="table-responsive">
            <table class="table table-striped">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.First().ProductKey)</th>
                    <th>@Html.DisplayNameFor(model => model.First().InventoryID)</th>
                    <th>Upload Date</th>
                    <th>Type Certificate</th>
                    <th>Certificate</th>
                </tr>

                @if (Model == null || Model.Count == 0)
                {
                    <tr>
                        <td colspan="3">No rows match search criteria</td>
                    </tr>
                }
                else
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductKey)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InventoryID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CertificateType.CertificateTypeName)
                            </td>
                            <td>
                                <a href="/Content/Uploads/@Html.DisplayFor(modelItem => item.ProductKey)-@Html.DisplayFor(modelItem => item.InventoryID)
.pdf">Link</a>
                            </td>
                        </tr>
                    }
                }

            </table>

                @Html.PagedListPager(Model, page => Url.Action("Inventory", new { page, product = Request.QueryString["product"], inventory = Request.QueryString["inventory"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })

        </div>

    </div>
</div>
