@model Rent_All_Certificate.Models.CertificationsUploadModel

@{
    ViewBag.Title = "Upload";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Upload Hoist Certification</h1>
    </div>
</div>


@using (Html.BeginForm("Hoist", "Certifications", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if (ViewBag.UploadMessage != null)
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Success!</strong> @string.Format(ViewBag.UploadMessage)
        </div>
    }
    else if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-warning alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (ViewBag.FileSuccessCount != null && (int)ViewBag.FileSuccessCount > 0)
            {
                <p>@string.Format("The {0} remaining file(s) have been uploaden.", (int)ViewBag.FileSuccessCount)</p>
            }
        </div>
    }

    <div class="col-md-12">
        <p>
            <table>
                <tr>
                    <td>
                        <strong>
                            Notice!&nbsp;
                        </strong>
                    </td>
                    <td>
                        only PDF files can be uploaded with a maximum of 1 GB in total and with the following filename structure:
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        (ProductKey)-(ProductID).pdf
                    </td>
                </tr>
            </table>
        </p>
        <p>
            <strong>Example:</strong>
            INCL0055-0001.pdf
        </p>
        <br />
    </div>

    <div class="col-md-6">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Certification.BranchID, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Certification.BranchID", (SelectList)ViewBag.BranchID, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Certification.BranchID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Certification.BranchID, "Upload", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Certificates, new { type = "file" })
                    <input type="file" name="Certificates" id="Certificates" accept="application/pdf" multiple="multiple" />
                    @Html.ValidationMessageFor(model => model.Certification.BranchID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Upload" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}
