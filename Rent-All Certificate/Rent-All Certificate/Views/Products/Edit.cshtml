@model Rent_All_Certificate.Models.ProductEditModel
@{
    ViewBag.Title = "Edit";
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Edit Product</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
@using (Html.BeginForm())
{

    <div class="row">
        <div class="col-xs-6">
            <div class="form-horizontal">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Product.ProductKey)
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Product.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ManufacturerID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Product.ManufacturerID", (SelectList)ViewBag.ManufacturerID, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Product.ManufacturerID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.PhaseID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Product.PhaseID", (SelectList)ViewBag.PhaseID, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Product.PhaseID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xs-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Product.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div id="CategoryLists">
                        @Html.Partial("~/Views/Shared/_categoryDropDownLists.cshtml", Model.CategorySelectList)
                    </div>
                    @Ajax.ActionLink("updateLink", "UpdateEditCategoryDropDownLists", "Categories",
                    new { SelectedCategory = "" },
                    new AjaxOptions
                    {
                        HttpMethod = "GET",
                        UpdateTargetId = "CategoryLists",
                        InsertionMode = InsertionMode.Replace
                    },
                    new { id = "updateLink", @class = "hidden" }
                )
                    @Html.HiddenFor(model => model.Product.CategoryID, new { id = "SelectedCategory" })
                    @Html.ValidationMessageFor(model => model.Product.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-6">

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
        <div class="col-xs-6">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function changeActionURL(value) {
        if (value === "") {
            return;
        }
        var url = "/Categories/UpdateEditCategoryDropDownLists?SelectedCategory=" + value;
        $("#SelectedCategory").val(value);
        $("#updateLink").attr('href', url);
        document.getElementById('updateLink').dispatchEvent(new MouseEvent("click", { "view": window, "bubbles": true, "cancelable": true }));
    }
</script>
