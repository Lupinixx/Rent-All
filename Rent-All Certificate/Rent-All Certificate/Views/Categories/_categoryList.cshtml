@using Rent_All_Certificate.Models
@model CategoryIndexModel
@using (Ajax.BeginForm("UpdateCategoryList", "Categories", new AjaxOptions
    {
        HttpMethod = "GET",
        UpdateTargetId = "CategoryLists",
        InsertionMode = InsertionMode.Replace
    }))
{
    for (var i = 0; i < Model.CategorySelectList.Count(); i++)
    {
        @Html.DropDownList( "[" + i + "].SelectCategory", 
            new SelectList(Model.CategorySelectList[i].CategoriesSelectList, "CategoryID", "CategoryName", Model.CategorySelectList[i].SelectedCategoryId), 
            "Select a category",
            new
            {
                onchange = "$('input#SelectedCategory').val($(this).val()); $('#categorySelect').click();", 
                @class = "form-control"
            })
    }
    <input type="hidden" id="SelectedCategory" name="SelectedCategory" />
    <input type="submit" id="categorySelect" value="Search" class="hidden" />
}


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CategorieTabelList.FirstOrDefault().CategoryName)
        </th>
        <th>Edit</th>
        <th>Delete</th>
        <th>
            @Html.DisplayNameFor(model => model.CategorieTabelList.FirstOrDefault().Product)
        </th>
    </tr>
    @foreach (var item in Model.CategorieTabelList.Where(m => m.ParentID == Model.StarterCategoryId))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CategoryID })
            </td>
            <td>
                @Html.ActionLink("Delete", "Delete", new { id = item.CategoryID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Count)
            </td>
        </tr>
        if (Model.CategorieTabelList.Count(m => m.ParentID == item.CategoryID) > 0)
        {
            @GetSubCategoryList(Model.CategorieTabelList.Where(m => m.ParentID == item.CategoryID));
        }
    }
</table>
@helper  GetSubCategoryList(IEnumerable<Category> SubList, string inspring = "  |")
{
    foreach (var item in SubList)
    {
        <tr>
            <td>
                &nbsp;@inspring @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CategoryID })
            </td>
            <td>
                @Html.ActionLink("Delete", "Delete", new { id = item.CategoryID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Count)
            </td>
        </tr>
        if (Model.CategorieTabelList.Count(m => m.ParentID == item.CategoryID) > 0)
        {
            @GetSubCategoryList(Model.CategorieTabelList.Where(m => m.ParentID == item.CategoryID), inspring + "-");
        }
    }
}
