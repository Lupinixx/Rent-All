@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Rent_All_Certificate.Models.Phase>
@{
    ViewBag.Title = "Phases";
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Phases</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<!-- /.row -->
<div class="row">
    <div class="col-xs-6">
        <p>
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
        </p>
    </div>
    <div class="sidebar-search col-xs-6">
        <div class="input-group custom-search-form">
            @using (@Html.BeginForm("Index", "Phases", FormMethod.Get))
            {

                @Html.TextBox("search", null, new { @class = "form-control", placeholder = "Phase" })

                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
            }
        </div>
        <!-- /input-group test-->
    </div>
</div>
<div class="table-responsive">
<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().PhaseName)
        </th>
        <th></th>
        <th>Products</th>
    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="3">No rows match search criteria</td>
        </tr>
    }
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PhaseName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {id = item.PhaseID}) |
                @if (item.Product.Count > 0)
                {
                    <a class="grayLink" href="#">Delete</a>
                }
                else
                {
                    @Html.ActionLink("Delete", "Delete", new {id = item.PhaseID}, new {onclick = "return confirm('Are you sure you want to delete?')"})
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Count)
            </td>
        </tr>
    }
</table>
    </div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = Request.QueryString["search"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
